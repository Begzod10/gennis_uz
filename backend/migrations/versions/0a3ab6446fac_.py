"""empty message

Revision ID: 0a3ab6446fac
Revises: 948252e19200
Create Date: 2022-07-06 14:25:10.459525

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0a3ab6446fac'
down_revision = '948252e19200'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accountinginfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('all_payments', sa.Integer(), nullable=True),
    sa.Column('all_teacher_salaries', sa.Integer(), nullable=True),
    sa.Column('all_staff_salaries', sa.Integer(), nullable=True),
    sa.Column('all_overhead', sa.Integer(), nullable=True),
    sa.Column('all_capital', sa.Integer(), nullable=True),
    sa.Column('current_cash', sa.Integer(), nullable=True),
    sa.Column('old_cash', sa.Integer(), nullable=True),
    sa.Column('all_discount', sa.Integer(), nullable=True),
    sa.Column('account_period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_period_id'], ['accountingperiod.id'], ),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['paymenttypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['coursetypes.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendancehistorystudent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('total_debt', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('present_days', sa.Integer(), nullable=True),
    sa.Column('absent_days', sa.Integer(), nullable=True),
    sa.Column('average_ball', sa.Integer(), nullable=True),
    sa.Column('payment', sa.Integer(), nullable=True),
    sa.Column('remaining_debt', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('total_discount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendancehistoryteacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('total_salary', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('taken_money', sa.Integer(), nullable=True),
    sa.Column('remaining_salary', sa.Integer(), nullable=True),
    sa.Column('salary_from_payment', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staffsalary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('total_salary', sa.Integer(), nullable=True),
    sa.Column('remaining_salary', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('taken_money', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachersalary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('total_salary', sa.Integer(), nullable=True),
    sa.Column('remaining_salary', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('salary_from_payment', sa.Integer(), nullable=True),
    sa.Column('taken_money', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendancedays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('attendance_id', sa.Integer(), nullable=True),
    sa.Column('calendar_day', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('activeness', sa.Integer(), nullable=True),
    sa.Column('dictionary', sa.Integer(), nullable=True),
    sa.Column('homework', sa.Integer(), nullable=True),
    sa.Column('average_ball', sa.Integer(), nullable=True),
    sa.Column('balance_per_day', sa.Integer(), nullable=True),
    sa.Column('salary_per_day', sa.Integer(), nullable=True),
    sa.Column('balance_with_discount', sa.Integer(), nullable=True),
    sa.Column('discount_per_day', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['attendance_id'], ['attendance.id'], ),
    sa.ForeignKeyConstraint(['calendar_day'], ['calendarday.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staffsalaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_sum', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('salary_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_day', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('profession_id', sa.Integer(), nullable=True),
    sa.Column('account_period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_period_id'], ['accountingperiod.id'], ),
    sa.ForeignKeyConstraint(['calendar_day'], ['calendarday.id'], ),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['paymenttypes.id'], ),
    sa.ForeignKeyConstraint(['profession_id'], ['professions.id'], ),
    sa.ForeignKeyConstraint(['salary_id'], ['staffsalary.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studentpayments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('attendance_history_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_day', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('payment_sum', sa.Integer(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('account_period_id', sa.Integer(), nullable=True),
    sa.Column('payment', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['account_period_id'], ['accountingperiod.id'], ),
    sa.ForeignKeyConstraint(['attendance_history_id'], ['attendancehistorystudent.id'], ),
    sa.ForeignKeyConstraint(['calendar_day'], ['calendarday.id'], ),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['paymenttypes.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachersalaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_sum', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('salary_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('calendar_day', sa.Integer(), nullable=True),
    sa.Column('calendar_month', sa.Integer(), nullable=True),
    sa.Column('calendar_year', sa.Integer(), nullable=True),
    sa.Column('account_period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_period_id'], ['accountingperiod.id'], ),
    sa.ForeignKeyConstraint(['calendar_day'], ['calendarday.id'], ),
    sa.ForeignKeyConstraint(['calendar_month'], ['calendarmonth.id'], ),
    sa.ForeignKeyConstraint(['calendar_year'], ['calendaryear.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['paymenttypes.id'], ),
    sa.ForeignKeyConstraint(['salary_id'], ['teachersalary.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teachersalaries')
    op.drop_table('studentpayments')
    op.drop_table('staffsalaries')
    op.drop_table('attendancedays')
    op.drop_table('teachersalary')
    op.drop_table('staffsalary')
    op.drop_table('attendancehistoryteacher')
    op.drop_table('attendancehistorystudent')
    op.drop_table('attendance')
    op.drop_table('accountinginfo')
    # ### end Alembic commands ###
